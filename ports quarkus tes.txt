
$ port 8081:8081    // QUARKUS-API-UTILISATEUR
$ port 3307:3306    // BDD-API-UTILISATEUR
$ port 8082:8082    // QUARKUS-API-ARTICLEVENDU
$ port 3308:3306    // BDD-API-ARTICLEVENDU
$ port 8083:8083    // QUARKUS-API-ENCHERE
$ port 3309:3306    // BDD-API-ENCHERE
$ port 8084:8084    // QUARKUS-API-IMAGEARTICLE
$ port 3310:3306    // BDD-API-IMAGEARTICLE
$ port 8181:80      // PHP-MYADMIN-TES
$ port 8080:80      // ANGULAR-TES

1. vérifier le fichier Dockerfile.native, généré dans le projet sous scr/main/docker

2. créer un exécutable natif -> mvn package -Pnative -Dquarkus.native.container-build=true
   puis créer une image docker -> docker build -f src/main/docker/Dockerfile.native -t tes-api-rest-utilisateur .
   (ici "tes/api-rest-utilisateur" = nom de l'image))
	ou
   créer un exécutable natif + image docker en 1 seule commande -> mvnw package -Pnative -Dquarkus.native.container-build=true -Dquarkus.container-image.build=true
   (mais ensuite accès à l'image refusé par docker)

3. utiliser l'image docker dans un docker-compose.yml
(3 bis. ou exécuter l'image dans un conteneur:
	docker run -i --rm -p 8080:8080 tes/api-rest-utilisateur )

Commandes docker:
- exécuter le docker-compose.yml : docker-compose up -d
- arrêter tous les conteneurs : docker stop $(docker ps -a -q)
- supprimer tous les conteneurs : docker rm $(docker ps -a -q)


